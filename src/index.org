#+title:  Solutions for the bible of Quantum Computation and Quantum Information
#+author: Reinhard Stahn
#+setupfile: ./inc/setupfile.org

# Intro text for the generated HTML site:
# TODO: once the deployment uses org v9.5 or higher use org-cite in the paragraph below: [cite: @ChuangNielsen2011]
This website contains solutions for /some/ of the exercises from `Quantum Computation and Quantum
Information` (Nielsen, Michael A. and Chuang, Isaac L., 2011) (aka "Mike and Ike"). I am not an
expert in quantum mechanics but I am an experienced mathematician and a software developer who
enjoys solving these exercises. There are already tons of solutions out there but some solutions are
hard to find and so I think there is a certain value in sharing my solutions.

The site is generated from [[https://orgmode.org/index.html][org-mode]] files hosted on [[https://github.com/rainij/solutions-qcqi-nielsen-chuang][github]]. The code within the org files is mostly
python. To interact with it you can /tangle/ the org file into a python file which then can be
loaded into =ipython=. But you probably need [[https://www.gnu.org/software/emacs/][Emacs]] to do so, because only Emacs has support for the
more sophisticated features of the almighty org-mode. See the [[https://github.com/rainij/solutions-qcqi-nielsen-chuang][README]] of the repository for more
information.

- [[file:all.org][Legacy page]]
- [[file:notation.org][Notation]]
- Part I
  - [[file:chapter-2.org][Chapter 2]]
  - [[file:chapter-3.org][Chapter 3]]
- Part II
  - Chapter 4
  - Chapter 5

* COMMENT TODOs [9/16]
- [X] Write Exercise x.y instead of exercise x.y in headings.
- [X] Remove the numbers from (at least some) headings in the HTML output.
- [X] How to tell the HTML exporter to recognize the latex macros (e.g. for \norm).
- [X] Remove toplevel Heading "quantum bible", Make Parts toplevel.
- [X] move latex_header to separate file
- [X] Use ~qiskit.circuit.Parameter~ ([[https://qiskit.org/documentation/stubs/qiskit.circuit.QuantumCircuit.assign_parameters.html][link]]) to draw some of the circuits.
- [X] Use ~print~ less often in code blocks to not pollute ipython when using ~%run quantum-bible.py~.
- [X] Don't use these "Inline" Appendices. Use ~:exports results~ and so on.
- [X] Setup some nice CSS.
- [ ] Already with just 60 exercises the mathjax on the website takes alot of time. Find a solution
  to this problem.
  - Possible solution: One might split this org file into several org files, e.g. by chapter.
  - Possible solution: Do as here [[http://sporadic.stanford.edu/bump/group/gr2_2.html][fold proofs]].
- [ ] Comment out "Search for circuits" - it might be distracting?
- [ ] Do not replace (most) results of code blocks. If a result is already there do not recompute if
  block was not changed (or similar criterion).
- [ ] Github pages build should use modern emacs (via docker) and not the one which coincidentally
  ships with =ubuntu-latest=. As of writing this, Ubuntu uses Emacs 27.1 (org-mode 9.3). I
  personally use a custom build of Emacs 29. This solves the following problems:
  - Properly support citations via =org-cite= (fortunately we only cite one thing at the moment ðŸ˜„).
  - Older org modes do not put (svg) images into an =img= HTML-container - this makes them look "different".
- [ ] Should we have some "proof-environment"?
- [ ] I use type annotations only due to its in-IDE benefits. Might make sense to actually set up
  type checking - somehow.
- [ ] We would like to have chapter wise session. On the other hand we also need to share some stuff
  between chapters. Currently I made chapter 4 and chapter but this may be a problem since I
  potentially want to divide the file into several files (not sure though).
